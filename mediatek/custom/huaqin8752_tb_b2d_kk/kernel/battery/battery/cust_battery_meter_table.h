#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#include <mach/mt_typedefs.h>

// ============================================================
// define
// ============================================================
#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             24000	
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900	
#endif

#define RBAT_PULL_UP_VOLT          2800



// ============================================================
// ENUM
// ============================================================

// ============================================================
// structure
// ============================================================

// ============================================================
// typedef
// ============================================================
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// ============================================================
// External Variables
// ============================================================

// ============================================================
// External function
// ============================================================

// ============================================================
// <DOD, Battery_Voltage> Table
// ============================================================
#if (BAT_NTC_10 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,72970},
        {-15,56830},
        {-10,44610},
        { -5,35300},
        {  0,28130},
        {  5,22580},
        { 10,18250},
        { 15,14840},
        { 20,12150},
        { 25,10000},
        { 30,8280},
        { 35,6890},
        { 40,5770},
        { 45,4850},
        { 50,4100},
        { 55,3480},
        { 60,2960}
    };
#endif

#if (BAT_NTC_47 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,483954},
        {-15,360850},
        {-10,271697},
        { -5,206463},
        {  0,158214},
        {  5,122259},
        { 10,95227},
        { 15,74730},
        { 20,59065},
        { 25,47000},
        { 30,37643},
        { 35,30334},
        { 40,24591},
        { 45,20048},
        { 50,16433},
        { 55,13539},
        { 60,11210}        
    };
#endif

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] =
{
	{0   , 4331},
	{1   , 4315},
	{2   , 4301},
	{3   , 4288},
	{4   , 4274},
	{6   , 4261},
	{7   , 4248},
	{8   , 4234},
	{9   , 4221},
	{10  , 4209},
	{11  , 4195},
	{12  , 4183},
	{13  , 4170},
	{15  , 4157},
	{16  , 4145},
	{17  , 4134},
	{18  , 4121},
	{19  , 4109},
	{20  , 4097},
	{21  , 4086},
	{22  , 4075},
	{24  , 4065},
	{25  , 4054},
	{26  , 4042},
	{27  , 4032},
	{28  , 4022},
	{29  , 4011},
	{30  , 4001},
	{31  , 3992},
	{33  , 3983},
	{34  , 3974},
	{35  , 3966},
	{36  , 3957},
	{37  , 3950},
	{38  , 3941},
	{39  , 3934},
	{40  , 3925},
	{42  , 3917},
	{43  , 3907},
	{44  , 3896},
	{45  , 3882},
	{46  , 3869},
	{47  , 3858},
	{48  , 3849},
	{49  , 3842},
	{51  , 3835},
	{52  , 3830},
	{53  , 3825},
	{54  , 3820},
	{55  , 3816},
	{56  , 3811},
	{57  , 3807},
	{58  , 3803},
	{60  , 3799},
	{61  , 3795},
	{62  , 3792},
	{63  , 3789},
	{64  , 3786},
	{65  , 3783},
	{66  , 3780},
	{67  , 3778},
	{69  , 3775},
	{70  , 3773},
	{71  , 3772},
	{72  , 3771},
	{73  , 3768},
	{74  , 3766},
	{75  , 3764},
	{76  , 3760},
	{78  , 3757},
	{79  , 3754},
	{80  , 3748},
	{81  , 3744},
	{82  , 3739},
	{83  , 3734},
	{84  , 3727},
	{85  , 3718},
	{86  , 3708},
	{88  , 3699},
	{89  , 3686},
	{90  , 3679},
	{91  , 3676},
	{92  , 3674},
	{93  , 3670},
	{94  , 3666},
	{95  , 3663},
	{97  , 3655},
	{98  , 3637},
	{99  , 3584},
	{100 , 3507},
	{101 , 3410}
};      
        
// T1 0C 
BATTERY_PROFILE_STRUC battery_profile_t1[] =
{
	{0   , 4331},
	{1   , 4315},
	{2   , 4301},
	{3   , 4288},
	{4   , 4274},
	{6   , 4261},
	{7   , 4248},
	{8   , 4234},
	{9   , 4221},
	{10  , 4209},
	{11  , 4195},
	{12  , 4183},
	{13  , 4170},
	{15  , 4157},
	{16  , 4145},
	{17  , 4134},
	{18  , 4121},
	{19  , 4109},
	{20  , 4097},
	{21  , 4086},
	{22  , 4075},
	{24  , 4065},
	{25  , 4054},
	{26  , 4042},
	{27  , 4032},
	{28  , 4022},
	{29  , 4011},
	{30  , 4001},
	{31  , 3992},
	{33  , 3983},
	{34  , 3974},
	{35  , 3966},
	{36  , 3957},
	{37  , 3950},
	{38  , 3941},
	{39  , 3934},
	{40  , 3925},
	{42  , 3917},
	{43  , 3907},
	{44  , 3896},
	{45  , 3882},
	{46  , 3869},
	{47  , 3858},
	{48  , 3849},
	{49  , 3842},
	{51  , 3835},
	{52  , 3830},
	{53  , 3825},
	{54  , 3820},
	{55  , 3816},
	{56  , 3811},
	{57  , 3807},
	{58  , 3803},
	{60  , 3799},
	{61  , 3795},
	{62  , 3792},
	{63  , 3789},
	{64  , 3786},
	{65  , 3783},
	{66  , 3780},
	{67  , 3778},
	{69  , 3775},
	{70  , 3773},
	{71  , 3772},
	{72  , 3771},
	{73  , 3768},
	{74  , 3766},
	{75  , 3764},
	{76  , 3760},
	{78  , 3757},
	{79  , 3754},
	{80  , 3748},
	{81  , 3744},
	{82  , 3739},
	{83  , 3734},
	{84  , 3727},
	{85  , 3718},
	{86  , 3708},
	{88  , 3699},
	{89  , 3686},
	{90  , 3679},
	{91  , 3676},
	{92  , 3674},
	{93  , 3670},
	{94  , 3666},
	{95  , 3663},
	{97  , 3655},
	{98  , 3637},
	{99  , 3584},
	{100 , 3507},
	{101 , 3410}
};           

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] =
{
	{0   , 4331},
	{1   , 4315},
	{2   , 4301},
	{3   , 4288},
	{4   , 4274},
	{6   , 4261},
	{7   , 4248},
	{8   , 4234},
	{9   , 4221},
	{10  , 4209},
	{11  , 4195},
	{12  , 4183},
	{13  , 4170},
	{15  , 4157},
	{16  , 4145},
	{17  , 4134},
	{18  , 4121},
	{19  , 4109},
	{20  , 4097},
	{21  , 4086},
	{22  , 4075},
	{24  , 4065},
	{25  , 4054},
	{26  , 4042},
	{27  , 4032},
	{28  , 4022},
	{29  , 4011},
	{30  , 4001},
	{31  , 3992},
	{33  , 3983},
	{34  , 3974},
	{35  , 3966},
	{36  , 3957},
	{37  , 3950},
	{38  , 3941},
	{39  , 3934},
	{40  , 3925},
	{42  , 3917},
	{43  , 3907},
	{44  , 3896},
	{45  , 3882},
	{46  , 3869},
	{47  , 3858},
	{48  , 3849},
	{49  , 3842},
	{51  , 3835},
	{52  , 3830},
	{53  , 3825},
	{54  , 3820},
	{55  , 3816},
	{56  , 3811},
	{57  , 3807},
	{58  , 3803},
	{60  , 3799},
	{61  , 3795},
	{62  , 3792},
	{63  , 3789},
	{64  , 3786},
	{65  , 3783},
	{66  , 3780},
	{67  , 3778},
	{69  , 3775},
	{70  , 3773},
	{71  , 3772},
	{72  , 3771},
	{73  , 3768},
	{74  , 3766},
	{75  , 3764},
	{76  , 3760},
	{78  , 3757},
	{79  , 3754},
	{80  , 3748},
	{81  , 3744},
	{82  , 3739},
	{83  , 3734},
	{84  , 3727},
	{85  , 3718},
	{86  , 3708},
	{88  , 3699},
	{89  , 3686},
	{90  , 3679},
	{91  , 3676},
	{92  , 3674},
	{93  , 3670},
	{94  , 3666},
	{95  , 3663},
	{97  , 3655},
	{98  , 3637},
	{99  , 3584},
	{100 , 3507},
	{101 , 3410}
};     

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] =
{
	{0   , 4331},
	{1   , 4315},
	{2   , 4301},
	{3   , 4288},
	{4   , 4274},
	{6   , 4261},
	{7   , 4248},
	{8   , 4234},
	{9   , 4221},
	{10  , 4209},
	{11  , 4195},
	{12  , 4183},
	{13  , 4170},
	{15  , 4157},
	{16  , 4145},
	{17  , 4134},
	{18  , 4121},
	{19  , 4109},
	{20  , 4097},
	{21  , 4086},
	{22  , 4075},
	{24  , 4065},
	{25  , 4054},
	{26  , 4042},
	{27  , 4032},
	{28  , 4022},
	{29  , 4011},
	{30  , 4001},
	{31  , 3992},
	{33  , 3983},
	{34  , 3974},
	{35  , 3966},
	{36  , 3957},
	{37  , 3950},
	{38  , 3941},
	{39  , 3934},
	{40  , 3925},
	{42  , 3917},
	{43  , 3907},
	{44  , 3896},
	{45  , 3882},
	{46  , 3869},
	{47  , 3858},
	{48  , 3849},
	{49  , 3842},
	{51  , 3835},
	{52  , 3830},
	{53  , 3825},
	{54  , 3820},
	{55  , 3816},
	{56  , 3811},
	{57  , 3807},
	{58  , 3803},
	{60  , 3799},
	{61  , 3795},
	{62  , 3792},
	{63  , 3789},
	{64  , 3786},
	{65  , 3783},
	{66  , 3780},
	{67  , 3778},
	{69  , 3775},
	{70  , 3773},
	{71  , 3772},
	{72  , 3771},
	{73  , 3768},
	{74  , 3766},
	{75  , 3764},
	{76  , 3760},
	{78  , 3757},
	{79  , 3754},
	{80  , 3748},
	{81  , 3744},
	{82  , 3739},
	{83  , 3734},
	{84  , 3727},
	{85  , 3718},
	{86  , 3708},
	{88  , 3699},
	{89  , 3686},
	{90  , 3679},
	{91  , 3676},
	{92  , 3674},
	{93  , 3670},
	{94  , 3666},
	{95  , 3663},
	{97  , 3655},
	{98  , 3637},
	{99  , 3584},
	{100 , 3507},
	{101 , 3410}
};           

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};    

// ============================================================
// <Rbat, Battery_Voltage> Table
// ============================================================
// T0 -10C
R_PROFILE_STRUC r_profile_t0[] =
{
	{167 , 4331},
	{167 , 4315},
	{167 , 4301},
	{168 , 4288},
	{168 , 4274},
	{170 , 4261},
	{170 , 4248},
	{170 , 4234},
	{168 , 4221},
	{172 , 4209},
	{170 , 4195},
	{172 , 4183},
	{170 , 4170},
	{170 , 4157},
	{172 , 4145},
	{173 , 4134},
	{173 , 4121},
	{190 , 4109},
	{188 , 4097},
	{190 , 4086},
	{190 , 4075},
	{193 , 4065},
	{195 , 4054},
	{193 , 4042},
	{193 , 4032},
	{195 , 4022},
	{197 , 4011},
	{195 , 4001},
	{198 , 3992},
	{198 , 3983},
	{200 , 3974},
	{202 , 3966},
	{203 , 3957},
	{207 , 3950},
	{208 , 3941},
	{210 , 3934},
	{212 , 3925},
	{213 , 3917},
	{212 , 3907},
	{208 , 3896},
	{198 , 3882},
	{192 , 3869},
	{187 , 3858},
	{183 , 3849},
	{183 , 3842},
	{180 , 3835},
	{182 , 3830},
	{182 , 3825},
	{182 , 3820},
	{183 , 3816},
	{183 , 3811},
	{183 , 3807},
	{185 , 3803},
	{185 , 3799},
	{183 , 3795},
	{185 , 3792},
	{187 , 3789},
	{187 , 3786},
	{187 , 3783},
	{187 , 3780},
	{187 , 3778},
	{187 , 3775},
	{187 , 3773},
	{188 , 3772},
	{190 , 3771},
	{188 , 3768},
	{188 , 3766},
	{190 , 3764},
	{188 , 3760},
	{190 , 3757},
	{192 , 3754},
	{187 , 3748},
	{190 , 3744},
	{190 , 3739},
	{193 , 3734},
	{193 , 3727},
	{192 , 3718},
	{193 , 3708},
	{197 , 3699},
	{195 , 3686},
	{198 , 3679},
	{200 , 3676},
	{205 , 3674},
	{210 , 3670},
	{217 , 3666},
	{230 , 3663},
	{245 , 3655},
	{257 , 3637},
	{267 , 3584},
	{307 , 3507},
	{350 , 3410}
};      

// T1 0C
R_PROFILE_STRUC r_profile_t1[] =
{
	{167 , 4331},
	{167 , 4315},
	{167 , 4301},
	{168 , 4288},
	{168 , 4274},
	{170 , 4261},
	{170 , 4248},
	{170 , 4234},
	{168 , 4221},
	{172 , 4209},
	{170 , 4195},
	{172 , 4183},
	{170 , 4170},
	{170 , 4157},
	{172 , 4145},
	{173 , 4134},
	{173 , 4121},
	{190 , 4109},
	{188 , 4097},
	{190 , 4086},
	{190 , 4075},
	{193 , 4065},
	{195 , 4054},
	{193 , 4042},
	{193 , 4032},
	{195 , 4022},
	{197 , 4011},
	{195 , 4001},
	{198 , 3992},
	{198 , 3983},
	{200 , 3974},
	{202 , 3966},
	{203 , 3957},
	{207 , 3950},
	{208 , 3941},
	{210 , 3934},
	{212 , 3925},
	{213 , 3917},
	{212 , 3907},
	{208 , 3896},
	{198 , 3882},
	{192 , 3869},
	{187 , 3858},
	{183 , 3849},
	{183 , 3842},
	{180 , 3835},
	{182 , 3830},
	{182 , 3825},
	{182 , 3820},
	{183 , 3816},
	{183 , 3811},
	{183 , 3807},
	{185 , 3803},
	{185 , 3799},
	{183 , 3795},
	{185 , 3792},
	{187 , 3789},
	{187 , 3786},
	{187 , 3783},
	{187 , 3780},
	{187 , 3778},
	{187 , 3775},
	{187 , 3773},
	{188 , 3772},
	{190 , 3771},
	{188 , 3768},
	{188 , 3766},
	{190 , 3764},
	{188 , 3760},
	{190 , 3757},
	{192 , 3754},
	{187 , 3748},
	{190 , 3744},
	{190 , 3739},
	{193 , 3734},
	{193 , 3727},
	{192 , 3718},
	{193 , 3708},
	{197 , 3699},
	{195 , 3686},
	{198 , 3679},
	{200 , 3676},
	{205 , 3674},
	{210 , 3670},
	{217 , 3666},
	{230 , 3663},
	{245 , 3655},
	{257 , 3637},
	{267 , 3584},
	{307 , 3507},
	{350 , 3410}
};     

// T2 25C
R_PROFILE_STRUC r_profile_t2[] =
{
	{167 , 4331},
	{167 , 4315},
	{167 , 4301},
	{168 , 4288},
	{168 , 4274},
	{170 , 4261},
	{170 , 4248},
	{170 , 4234},
	{168 , 4221},
	{172 , 4209},
	{170 , 4195},
	{172 , 4183},
	{170 , 4170},
	{170 , 4157},
	{172 , 4145},
	{173 , 4134},
	{173 , 4121},
	{190 , 4109},
	{188 , 4097},
	{190 , 4086},
	{190 , 4075},
	{193 , 4065},
	{195 , 4054},
	{193 , 4042},
	{193 , 4032},
	{195 , 4022},
	{197 , 4011},
	{195 , 4001},
	{198 , 3992},
	{198 , 3983},
	{200 , 3974},
	{202 , 3966},
	{203 , 3957},
	{207 , 3950},
	{208 , 3941},
	{210 , 3934},
	{212 , 3925},
	{213 , 3917},
	{212 , 3907},
	{208 , 3896},
	{198 , 3882},
	{192 , 3869},
	{187 , 3858},
	{183 , 3849},
	{183 , 3842},
	{180 , 3835},
	{182 , 3830},
	{182 , 3825},
	{182 , 3820},
	{183 , 3816},
	{183 , 3811},
	{183 , 3807},
	{185 , 3803},
	{185 , 3799},
	{183 , 3795},
	{185 , 3792},
	{187 , 3789},
	{187 , 3786},
	{187 , 3783},
	{187 , 3780},
	{187 , 3778},
	{187 , 3775},
	{187 , 3773},
	{188 , 3772},
	{190 , 3771},
	{188 , 3768},
	{188 , 3766},
	{190 , 3764},
	{188 , 3760},
	{190 , 3757},
	{192 , 3754},
	{187 , 3748},
	{190 , 3744},
	{190 , 3739},
	{193 , 3734},
	{193 , 3727},
	{192 , 3718},
	{193 , 3708},
	{197 , 3699},
	{195 , 3686},
	{198 , 3679},
	{200 , 3676},
	{205 , 3674},
	{210 , 3670},
	{217 , 3666},
	{230 , 3663},
	{245 , 3655},
	{257 , 3637},
	{267 , 3584},
	{307 , 3507},
	{350 , 3410}
}; 

// T3 50C
R_PROFILE_STRUC r_profile_t3[] =
{
	{167 , 4331},
	{167 , 4315},
	{167 , 4301},
	{168 , 4288},
	{168 , 4274},
	{170 , 4261},
	{170 , 4248},
	{170 , 4234},
	{168 , 4221},
	{172 , 4209},
	{170 , 4195},
	{172 , 4183},
	{170 , 4170},
	{170 , 4157},
	{172 , 4145},
	{173 , 4134},
	{173 , 4121},
	{190 , 4109},
	{188 , 4097},
	{190 , 4086},
	{190 , 4075},
	{193 , 4065},
	{195 , 4054},
	{193 , 4042},
	{193 , 4032},
	{195 , 4022},
	{197 , 4011},
	{195 , 4001},
	{198 , 3992},
	{198 , 3983},
	{200 , 3974},
	{202 , 3966},
	{203 , 3957},
	{207 , 3950},
	{208 , 3941},
	{210 , 3934},
	{212 , 3925},
	{213 , 3917},
	{212 , 3907},
	{208 , 3896},
	{198 , 3882},
	{192 , 3869},
	{187 , 3858},
	{183 , 3849},
	{183 , 3842},
	{180 , 3835},
	{182 , 3830},
	{182 , 3825},
	{182 , 3820},
	{183 , 3816},
	{183 , 3811},
	{183 , 3807},
	{185 , 3803},
	{185 , 3799},
	{183 , 3795},
	{185 , 3792},
	{187 , 3789},
	{187 , 3786},
	{187 , 3783},
	{187 , 3780},
	{187 , 3778},
	{187 , 3775},
	{187 , 3773},
	{188 , 3772},
	{190 , 3771},
	{188 , 3768},
	{188 , 3766},
	{190 , 3764},
	{188 , 3760},
	{190 , 3757},
	{192 , 3754},
	{187 , 3748},
	{190 , 3744},
	{190 , 3739},
	{193 , 3734},
	{193 , 3727},
	{192 , 3718},
	{193 , 3708},
	{197 , 3699},
	{195 , 3686},
	{198 , 3679},
	{200 , 3676},
	{205 , 3674},
	{210 , 3670},
	{217 , 3666},
	{230 , 3663},
	{245 , 3655},
	{257 , 3637},
	{267 , 3584},
	{307 , 3507},
	{350 , 3410}
}; 

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}
};    

// ============================================================
// function prototype
// ============================================================
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);

#endif	//#ifndef _CUST_BATTERY_METER_TABLE_H

